<?xml version="1.0" encoding="utf-8"?>
<page xmlns="http://projectmallard.org/1.0/"
      type="topic" style="spec"
      id="mal_inline_app">

<info>
  <link type="guide" xref="mal_inline#elements"/>

  <revision docversion="1.0" date="2011-11-14" status="final"/>
  <revision docversion="1.1" date="2019-01-13" status="review"/>
  <revision docversion="1.1" date="2019-01-29" status="final"/>

  <credit type="author copyright">
    <name>Shaun McCance</name>
    <email>shaunm@gnome.org</email>
    <years>2007-2011</years>
  </credit>

  <include href="../cc-by-sa-3-0.xml" xmlns="http://www.w3.org/2001/XInclude" />

  <desc>Mark up the human-readable name of an application or window.</desc>
</info>

<title>Application Names</title>

<p>Use the <code>app</code> element to mark up the human-readable name of an
application or the title of a window within an application.  Do not use the
<code>app</code> element to mark up the command used to run an application;
use <code xref="mal_inline_cmd">cmd</code> for this purpose instead.</p>


<!-- BEGIN notes -->
<section id="notes">
  <title>Notes</title>
  <list>
    <item><p>The <code>app</code> element can contain a mixture of text and
    any <link xref="mal_inline">general inline elements</link>.</p></item>

    <item><p>The <code>app</code> element can occur in any
    general inline context, including inside most
    <link xref="mal_inline">inline elements</link>, some
    <link xref="mal_block#basic">basic block elements</link>, and certain
    <link xref="mal_info">informational elements</link>.</p></item>

    <item><p>The <code>app</code> element can link to other pages or documents.
    See <link xref="mal_attr_link"/> for more information.</p></item>

    <item><p>The <code>style</code> attribute takes a space-separated list of
    style hints.  Processing tools should adjust their behavior according to
    those style hints they understand.</p></item>

    <item><p>The <code>app</code> element can have attributes from external
    namespaces.  See <link xref="mal_external"/> for more information
    on external-namespace attributes.</p></item>
  </list>
</section>
<!-- END notes -->


<!-- BEGIN examples -->
<section id="examples">
  <title>Examples</title>

  <p>Use <code>app</code> to mark up the name of an application:</p>

  <example>
    <code mime="application/xml"><![CDATA[
To start <app>Totem Movie Player</app>, enter <cmd>totem</cmd> at
the command line.
]]></code>
    <p>To start <app>Totem Movie Player</app>, enter <cmd>totem</cmd> at the
    command line.</p>
  </example>

  <p>Use <code>app</code> to refer to a window:</p>

  <example>
    <code mime="application/xml"><![CDATA[
Use the <app>Theme Preferences</app> window to adjust the look of
your desktop.
]]></code>
    <p>Use the <app>Theme Preferences</app> window to adjust the look of your desktop.</p>
  </example>
</section>
<!-- END examples -->


<!-- BEGIN processing -->
<section id="processing">
  <title>Processing Expectations</title>

  <p>Application names are usually nouns, and are often common words or phrases
  that are indicative of their functionality.  Frequently, they are simply the
  name of what the application is.  In English and many other languages, the
  use of an application name in a sentence may sound like the author has simply
  mistakenly omitted an article, if the application name is not understood to
  be a title.</p>

  <p>For example, the calculator application that comes with GNOME is called
  <app>Calculator</app>.  If an author were to write “To start Calculator…”,
  then a reader may confuse this for “To start the calculator…” with an error.
  This is even more pronounced in languages such as German where nouns are
  always capitalized.</p>

  <p>For this reason, it is recommended that application names marked with the
  <code>app</code> element are rendered in italics or using some other font
  variation.  Authors who do not wish to have an application name stylized
  can use plain text without markup.</p>
</section>
<!-- END processing -->


<!-- BEGIN comparison -->
<section id="comparison">
  <title>Comparison to Other Formats</title>
  <p>The <code>app</code> element is similar to the
  <code href="http://www.docbook.org/tdg51/en/html/application.html">application</code>
  element in <link xref="docbook">DocBook</link>.</p>

  <p>There is no specific element for marking up application names
  in <link xref="dita">DITA</link>.  DITA provides the
  <code href="http://docs.oasis-open.org/dita/v1.2/cd03/spec/langref/wintitle.html">wintitle</code>
  element for marking up the title of a window.  In some cases, such
  as when the window is a standalone control panel, you may use the
  <code>app</code> element for this purpose.  Some authors, however,
  prefer marking up window titles with the
  <code xref="mal_inline_gui">gui</code> element.</p>
</section>
<!-- END comparison -->


<!-- BEGIN schema -->
<section id="schema">
<title>Schema</title>

<p>The formal definition of the Mallard language is maintained in
<link href="http://www.relaxng.org/">RELAX NG</link>
<link href="http://www.relaxng.org/compact-20021121.html">Compact Syntax</link>
in code blocks within this specification.  This is the formal definition
for the <code>app</code> element.  The namespace declarations for this
definition are on the page <link xref="mal_page"/>.</p>

<synopsis><code mime="application/relax-ng-compact-syntax">
mal_inline_app = element app {
  mal_inline_app_attr,
  mal_inline_app_inline
}
mal_inline_app_attr = (
  <link xref="mal_attr_link">mal_attr_link</link> *,
  attribute style { xsd:NMTOKENS } ?,
  <link xref="mal_inline">mal_inline_attr</link>,
  <link xref="mal_external">mal_attr_external</link> *
)
mal_inline_app_inline = <link xref="mal_inline">mal_inline</link>
</code></synopsis>
</section>
<!-- END schema -->

</page>
