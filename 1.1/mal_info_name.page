<page xmlns="http://projectmallard.org/1.0/"
      type="topic" style="spec"
      id="mal_info_name">

<info>
  <link type="guide" xref="mal_info#additional"/>

  <revision docversion="1.0" date="2011-11-15" status="final"/>
  <revision docversion="1.1" date="2019-01-13" status="review"/>
  <revision docversion="1.1" date="2019-01-29" status="final"/>

  <credit type="author copyright">
    <name>Shaun McCance</name>
    <email>shaunm@gnome.org</email>
    <years>2009-2011</years>
  </credit>

  <include href="../cc-by-sa-3-0.xml" xmlns="http://www.w3.org/2001/XInclude" />

  <desc>Provide the name of a credit or copyright holder.</desc>
</info>

<title>Names</title>

<p>Use the <code>name</code> element to mark up the name of a person or
organization in a <code xref="mal_info_credit">credit</code> element.</p>


<!-- BEGIN notes -->
<section id="notes">
  <title>Notes</title>
  <list>
    <item><p>The <code>name</code> element can contain a mixture of text and
    any <link xref="mal_inline">general inline elements</link>.</p></item>

    <item><p>The <code>name</code> element can occur in the
    <code xref="mal_info_credit">credit</code> element.</p></item>

    <item><p>The <code>style</code> attribute takes a space-separated list of
    style hints.  Processing tools should adjust their behavior according to
    those style hints they understand.</p></item>

    <item><p>The <code>name</code> element can have attributes from external
    namespaces.  See <link xref="mal_external"/> for more information
    on external-namespace attributes.</p></item>
  </list>
</section>
<!-- END notes -->


<!-- BEGIN examples -->
<section id="examples">
  <title>Examples</title>

  <p>Use <code xref="mal_info_credit">credit</code> and <code>name</code> to mark
  up the name of the author:</p>

  <example>
    <code mime="application/xml"><![CDATA[
<credit type="author">
  <name>Shaun McCance</name>
</credit>]]></code>
  </example>
</section>
<!-- END examples -->


<!-- BEGIN processing -->
<section id="processing">
  <title>Processing Expectations</title>

  <p>See the processing expectations for the
  <code xref="mal_info_credit">credit</code> element.</p>
</section>
<!-- END processing -->


<!-- BEGIN comparison -->
<section id="comparison">
  <title>Comparison to Other Formats</title>

  <p>The <code>name</code> element fulfills the same role as numerous
  <link xref="docbook">DocBook</link> elements, such as
  <code href="http://www.docbook.org/tdg51/en/html/personname.html">personname</code> and
  <code href="http://www.docbook.org/tdg51/en/html/publishername.html">publishername</code>.
  Note that Mallard does not attempt to model the names of people, as the rules for
  how to display names from their constituent parts vary considerably.  If parts of
  a name are needed for a domain-specific purpose, they can be included using elements
  from external namespaces on the parent element.</p>

  <p>The <code>name</code> element fulfills the same role as numerous
  <link xref="dita">DITA</link> elements, including
  <code href="http://docs.oasis-open.org/dita/v1.2/cd03/spec/langref/person.html">person</code>,
  <code href="http://docs.oasis-open.org/dita/v1.2/cd03/spec/langref/personname.html">personname</code>,
  <code href="http://docs.oasis-open.org/dita/v1.2/cd03/spec/langref/organization.html">organization</code>, and
  <code href="http://docs.oasis-open.org/dita/v1.2/cd03/spec/langref/organizationname.html">organizationname</code>.
  Note that Mallard does not attempt to model the names of people or organizations,
  as the rules for how to display names from their constituent parts vary considerably.
  If parts of a name are needed for a domain-specific purpose, they can be included
  using elements from external namespaces on the parent element.</p>
</section>
<!-- END comparison -->


<!-- BEGIN schema -->
<section id="schema">
<title>Schema</title>

<p>The formal definition of the Mallard language is maintained in
<link href="http://www.relaxng.org/">RELAX NG</link>
<link href="http://www.relaxng.org/compact-20021121.html">Compact Syntax</link>
in code blocks within this specification.  This is the formal definition
for the <code>name</code> element.  The namespace declarations for this
definition are on the page <link xref="mal_page"/>.</p>

<synopsis><code mime="application/relax-ng-compact-syntax">
mal_info_name = element name {
  mal_info_name_attr,
  mal_info_name_inline
}
mal_info_name_attr = (
  attribute style { xsd:NMTOKENS } ?,
  <link xref="mal_external">mal_attr_external</link> *
)
mal_info_name_inline = <link xref="mal_inline">mal_inline</link>
</code></synopsis>
</section>
<!-- END schema -->

</page>
