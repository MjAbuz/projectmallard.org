<page xmlns="http://projectmallard.org/1.0/"
      type="topic" style="spec"
      id="mal_inline_key">

<info>
  <link type="guide" xref="mal_inline#elements"/>

  <revision docversion="1.0" date="2011-11-15" status="final"/>
  <revision docversion="1.1" date="2019-01-13" status="review"/>

  <credit type="author copyright">
    <name>Shaun McCance</name>
    <email>shaunm@gnome.org</email>
    <years>2007-2011</years>
  </credit>

  <include href="../cc-by-sa-3-0.xml" xmlns="http://www.w3.org/2001/XInclude" />

  <desc>Mark up a key to be pressed on the userâ€™s keyboard.</desc>
</info>

<title>Key Strokes</title>

<p>Use the <code>key</code> element to mark up a key on the keyboard.
You can use this for letter keys, such as <key>Q</key>, or for keys
with names, such as <key>Ctrl</key>.  Generally, the contents of the
<code>key</code> element should be what is printed on the physical
key, although it may be a textual description for keys with symbols
printed on them.</p>

<p>Do not use <code>key</code> to mark up a class of keys, such as
<em>arrow keys</em>.  These do not require markup in running prose.
Inside a <code xref="mal_inline_keyseq">keyseq</code> element, you
are allowed to use text without a <code>key</code> element exactly
for this purpose.</p>

<p>Do not use <code>key</code> to mark up a symbolic key code or a numeric
key value; if necessary, use <code xref="mal_inline_sys">sys</code> for
these instead.</p>


<!-- BEGIN notes -->
<section id="notes">
  <title>Notes</title>
  <list>
    <item><p>The <code>key</code> element can contain a mixture of text and
    any <link xref="mal_inline">general inline elements</link>.</p></item>

    <item><p>The <code>key</code> element can occur in any
    general inline context, including inside most
    <link xref="mal_inline">inline elements</link>, some
    <link xref="mal_block#basic">basic block elements</link>, and certain
    <link xref="mal_info">informational elements</link>.</p></item>

    <item><p>The <code>key</code> element can also occur inside the
    <code xref="mal_inline_keyseq">keyseq</code> element, where it has
    special meaning.</p></item>

    <item><p>The <code>key</code> element can link to other pages or documents.
    See <link xref="mal_attr_link"/> for more information.</p></item>

    <item><p>The <code>style</code> attribute takes a space-separated list of
    style hints.  Processing tools should adjust their behavior according to
    those style hints they understand.</p></item>

    <item><p>The <code>key</code> element can have attributes from external
    namespaces.  See <link xref="mal_external"/> for more information
    on external-namespace attributes.</p></item>
  </list>
</section>
<!-- END notes -->


<!-- BEGIN examples -->
<section id="examples">
  <title>Examples</title>

  <p>Use <code>key</code> to mark up a letter key:</p>

  <example>
    <code mime="application/xml"><![CDATA[
Press <key>M</key> to mark the selected message as read.
]]></code>
    <p>Press <key>M</key> to mark the selected message as read.</p>
  </example>

  <p>Use <code>key</code> to mark up a function key:</p>

  <example>
    <code mime="application/xml"><![CDATA[
Press <key>F9</key> to check for new messages.
]]></code>
    <p>Press <key>F9</key> to check for new messages.</p>
  </example>

  <p>Use <code>key</code> to refer to a specific key by a
  textual description:</p>

  <example>
    <code mime="application/xml"><![CDATA[
Press the <key>Down</key> key to select the next item.
]]></code>
    <p>Press the <key>Down</key> key to select the next item.</p>
  </example>
</section>
<!-- END examples -->


<!-- BEGIN processing -->
<section id="processing">
  <title>Processing Expectations</title>

  <p>No particular special rendering is required for <code>key</code> elements.
  Keys may be rendered with lightened text or other subtle styling effects to
  distinguish them from the surrounding text.</p>
</section>
<!-- END processing -->


<!-- BEGIN comparison -->
<section id="comparison">
  <title>Comparison to Other Formats</title>
  <p>The <code>key</code> element is similar to the
  <code href="http://www.docbook.org/tdg51/en/html/keycap.html">keycap</code>
  element in <link xref="docbook">DocBook</link>.  Mallard does not provide
  elements analogous to the DocBook elements
  <code href="http://www.docbook.org/tdg51/en/html/keysym.html">keysym</code> and
  <code href="http://www.docbook.org/tdg51/en/html/keycode.html">keycode</code>.
  In most cases, these should be marked simply with the
  <code xref="mal_inline_sys">sys</code> element.</p>

  <p>There is no specific element for marking up keys in
  <link xref="dita">DITA</link>.</p>
</section>
<!-- END comparison -->


<!-- BEGIN schema -->
<section id="schema">
<title>Schema</title>

<p>The formal definition of the Mallard language is maintained in
<link href="http://www.relaxng.org/">RELAX NG</link>
<link href="http://www.relaxng.org/compact-20021121.html">Compact Syntax</link>
in code blocks within this specification.  This is the formal definition
for the <code>key</code> element.  The namespace declarations for this
definition are on the page <link xref="mal_page"/>.</p>

<synopsis><code mime="application/relax-ng-compact-syntax">
mal_inline_key = element key {
  mal_inline_key_attr,
  mal_inline_key_inline
}
mal_inline_key_attr = (
  <link xref="mal_attr_link">mal_attr_link</link> *,
  attribute style { xsd:NMTOKENS } ?,
  <link xref="mal_inline">mal_inline_attr</link>,
  <link xref="mal_external">mal_attr_external</link> *
)
mal_inline_key_inline = <link xref="mal_inline">mal_inline</link>
</code></synopsis>
</section>
<!-- END schema -->

</page>
