<page xmlns="http://projectmallard.org/1.0/"
      type="guide" style="spec-guide"
      id="mal_block">

<info>
  <link type="guide" xref="index" group="block"/>

  <revision docversion="1.0" date="2011-08-15" status="final"/>
  <revision docversion="1.1" date="2019-01-13" status="review"/>

  <credit type="author copyright">
    <name>Shaun McCance</name>
    <email>shaunm@gnome.org</email>
    <years>2008-2009</years>
  </credit>

  <include href="../cc-by-sa-3-0.xml" xmlns="http://www.w3.org/2001/XInclude" />

  <desc>Paragraphs, lists, tables, and various semantic elements for
  building simple yet stunning pages.</desc>
</info>

<title>Block Elements</title>

<p>Block elements are the building blocks of pages.  Mallard provides block
elements for most common needs in software documentation, from simple paragraphs
to example blocks to powerful tables.  Pages and sections in Mallard are built
up of block elements, which in turn contain either further block elements or
inline content.</p>

<p>Authors, editors, or other content producers sometimes need to supply
richer information in their documents.  While this information may not
be conveyed by display tools, it may be used for various internal tracking
purposes.  Mallard allows elements to be extended with attributes from
external namespaces.  See <link xref="mal_external"/> for more
information.</p>


<!-- BEGIN basic -->
<section id="basic">
  <info>
    <title type="link">Basic Block Elements</title>
    <link type="topic" xref="mal_block_code"/>
    <link type="topic" xref="mal_block_media"/>
    <link type="topic" xref="mal_block_p"/>
    <link type="topic" xref="mal_block_screen"/>
  </info>
  <title>Basic Elements</title>

  <p>Basic block elements are elements that do not contain a title and which
  have either general block content or <link xref="mal_inline">inline
  content</link>.  Using basic block elements, you can build up simple pages
  which convey information clearly.</p>

  <links type="topic" style="2column"/>
</section>
<!-- END basic -->


<!-- BEGIN formal -->
<section id="formal">
  <info>
    <title type="link">Formal Block Elements</title>
    <link type="topic" xref="mal_block_comment"/>
    <link type="topic" xref="mal_block_div"/>
    <link type="topic" xref="mal_block_example"/>
    <link type="topic" xref="mal_block_figure"/>
    <link type="topic" xref="mal_block_listing"/>
    <link type="topic" xref="mal_block_note"/>
    <link type="topic" xref="mal_block_quote"/>
    <link type="topic" xref="mal_block_synopsis"/>
  </info>
  <title>Formal Elements</title>

  <p>Formal block elements contain a <link xref="mal_block_title">title</link>
  and general block content.  Formal block elements allow you to provide
  richer information in your pages.</p>

  <links type="topic" style="2column"/>
</section>
<!-- END formal -->


<!-- BEGIN lists -->
<section id="lists">
  <info>
    <link type="topic" xref="mal_block_list"/>
    <link type="topic" xref="mal_block_steps"/>
    <link type="topic" xref="mal_block_terms"/>
    <link type="topic" xref="mal_block_tree"/>
  </info>
  <title>List Elements</title>

  <p>Mallard provides list elements for most common needs, including the common
  definition, ordered, and unordered lists.  Mallard also provides simple trees,
  which are useful for representing hierarchies such as class inheritance or
  directory layouts.  Each of the list elements uses the <code>item</code>
  element, though the content model for <code>item</code> varies.  See the
  list element pages for details.</p>
</section>
<!-- END lists -->


<!-- BEGIN tables -->
<section id="tables">
  <info>
  </info>
  <title>Tables</title>

  <p>Mallard provides a simple table model based on HTML tables.  While not
  allowing the level of styling flexibility as HTML and CSS, Mallard tables
  provides simple solutions to common styling needs, such as alternate-row
  shading.</p>
</section>
<!-- END tables -->


<!-- BEGIN other -->
<section id="other">
  <info>
    <link type="topic" xref="mal_block_title" group="title"/>
    <link type="topic" xref="mal_block_subtitle" group="subtitle"/>
    <link type="topic" xref="mal_block_desc" group="desc"/>
    <link type="topic" xref="mal_block_cite" group="cite"/>
  </info>
  <title>Other Block-like Elements</title>

  <p>Mallard contains various block-like elements which are only used in
  specific contexts, and are not allowed in general block content.  These
  elements allow for richer content models for the elements they appear
  in.</p>

  <links type="topic" groups="title subtitle desc cite"/>
</section>
<!-- END other -->


<!-- BEGIN processing -->
<section id="processing">
  <info>
    <title type="link">Block Processing Expectations</title>
  </info>
  <title>Processing Expectations</title>

  <p>Block elements all begin on a new line in rendered output.  Pages can
  be visualized as a sequence of vertically-stacked block elements.  Some
  block elements contain other block elements.  In these cases, the
  containing element may introduce certain styling effects, and each of
  the child elements is rendered as normal.</p>

  <p>Each block element should be clearly distinguishable from its surrounding
  block elements.  Typically, vertical padding is placed between block elements
  to set them apart.  Certain block elements, especially those that have block
  content, may use a border, background color, or other styling effects.  See
  each block element's specification for more details.</p>

  <p>Mallard allows elements from external namespaces to be used in any block
  context. Processing tools may have special behavior for particular elements
  they understand. If a processing tool does not understand an element in
  block context, it should process the children of the element as if they
  were block elements, except it should ignore any child elements it does
  not understand. This restricted block context allows extensions to have
  any content model while still providing a standard mechanism for fallback
  content.</p>

  <p>Sometimes extension block elements will use
  <code xref="mal_block_title">title</code> or <code xref="mal_block_desc">desc</code>
  elements. Processing tools should process <code>title</code> and <code>desc</code>
  elements as if the unrecognized block element were a <code xref="mal_block_div">div</code>
  element, processing other child content in restricted block context.</p>
</section>
<!-- END processing -->


<!-- BEGIN schema -->
<section id="schema">
<title>Schema</title>

<p>The formal definition of the Mallard language is maintained in
<link href="http://www.relaxng.org/">RELAX NG</link>
<link href="http://www.relaxng.org/compact-20021121.html">Compact Syntax</link>
in code blocks within this specification.  This is the formal definition
for the block content model.  The namespace declarations for this definition
are on the page <link xref="mal_page"/>.</p>

<synopsis><code mime="application/relax-ng-compact-syntax">
mal_block = (
  mal_block_elements |
  element * - (mal:* | local:*) {
    attribute * { text } *,
    ( <link xref="mal_external">mal_external</link> * &amp;
      mal_block_elements *
    )
  }
)
mal_block_elements = (  
  <link xref="mal_block_code">mal_block_code</link> |
  <link xref="mal_block_comment">mal_block_comment</link> |
  <link xref="mal_block_div">mal_block_div</link> |
  <link xref="mal_block_example">mal_block_example</link> |
  <link xref="mal_block_figure">mal_block_figure</link> |
  <link xref="mal_block_list">mal_block_list</link> |
  <link xref="mal_block_listing">mal_block_listing</link> |
  <link xref="mal_block_media">mal_block_media</link> |
  <link xref="mal_block_note">mal_block_note</link> |
  <link xref="mal_block_p">mal_block_p</link> |
  <link xref="mal_block_quote">mal_block_quote</link> |
  <link xref="mal_block_screen">mal_block_screen</link> |
  <link xref="mal_block_steps">mal_block_steps</link> |
  <link xref="mal_block_synopsis">mal_block_synopsis</link> |
  <link xref="mal_block_terms">mal_block_terms</link> |
  <link xref="mal_block_tree">mal_block_tree</link> |
  <link xref="mal_table">mal_table</link>
)
mal_block_attr = empty
</code></synopsis>
</section>
<!-- END schema -->

</page>
