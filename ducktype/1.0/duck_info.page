<page xmlns="http://projectmallard.org/1.0/"
      type="topic" style="spec spec-no-comparison spec-no-schema"
      id="duck_info">

<info>
  <link type="guide" xref="index" group="info"/>

  <revision docversion="1.0" date="2017-11-06" status="candidate"/>
  <revision docversion="1.0" date="2019-03-31" status="final"/>

  <credit type="author copyright">
    <name>Shaun McCance</name>
    <email>shaunm@gnome.org</email>
    <years>2015-2017</years>
  </credit>

  <desc>Linking and metadata for pages, sections, and blocks.</desc>

  <include href="../../cc-by-sa-3-0.xml" xmlns="http://www.w3.org/2001/XInclude"/>
</info>

<title>Informational Elements</title>

<p style="lead">Informational elements provide metadata for pages, sections, and certain
block elements. Ducktype provides a special syntax to write informational elements.</p>


<!-- BEGIN notes -->
<section id="notes">
  <title>Notes</title>

  <list>
    <item><p>Informational elements follow a <link xref="duck_page">page or section</link>
    header or a <link xref="duck_block">block declaration</link>.</p></item>

    <item><p>An informational element is declared with a leading <code>@</code>
    character, followed immediately by the name of the element.</p></item>

    <item><p>The informational element name may be immediately followed by an
    <link xref="duck_attr">attribute list</link>.</p></item>

    <item><p>The remaining content after the element name and optional
    attribute list is element content and is parsed as
    <link xref="duck_inline">inline content</link>.</p></item>

    <item><p>An informational element may have child elements, which also use the
    informational element syntax, indented on subsequent lines.</p></item>
  </list>
</section>
<!-- END notes -->


<!-- BEGIN examples -->
<section id="examples">
  <title>Examples</title>

  <p>Create a page with a guide link:</p>
  <example><code mime="text/x-ducktype">= My Page Title
@link[guide >index]
</code></example>

  <p>Add a link title using inline content in an informational element:</p>
  <example><code mime="text/x-ducktype">= My Page Title
@link[guide >index]
@title[link] My Page Link Title
</code></example>

  <p>Use nested informational elements to record credits:</p>
  <example><code mime="text/x-ducktype">= My Page Title
@credit[author]
  @name Rupert Monkey
  @email rupert@example.com
</code></example>

</section>
<!-- END examples -->


<!-- BEGIN spec -->
<section id="spec">
  <title>Specification</title>

  <p>An info segment is a sequence of one or more informational elements.
  An info segment may follow a <link xref="duck_page">page or section</link>
  title, subtitle, or <link xref="duck_attr">attribute list</link> (although
  it may not be between them). An info segment may also follow a
  <link xref="duck_block">block declaration</link>. It begins with a line
  (possibly indented) starting with the <code>@</code> character. Each line
  that starts with <code>@</code> is an informational element. The Mallard
  <code>info</code> element is implicit.</p>

  <p>If the first informational element is indented, then the outer and
  inner indent of the implicit <code>info</code> element is set to that
  indentation level. For block info segments, the first informational
  element also sets the inner indent of the containing block because it's
  the first line after the declaration. The <code>info</code> element
  ends in the following cases:</p>

  <list>
    <item><p>A line is encountered with an indent that is less than the outer
    indent of the <code>info</code> element.</p></item>

    <item><p>A line is encountered with an indent that is equal to the outer
    indent of the <code>info</code> element that does not start with
    the <code>@</code> character.</p></item>

    <item><p>A blank line is encountered in a block info segment (but
    not for pages and sections) and the outer indent of the <code>info</code>
    element is the same as the outer indent of the containing block. This
    is a consequence of the handling of newlines in block elements with
    unindented child content. Blank lines do not close the <code>info</code>
    element if it is indented.</p></item>
  </list>

  <p>The <code>@</code> character must be followed by a name. The name
  may be followed either by a left square bracket or whitespace. If the name
  is followed by a left square bracket, an attribute list is opened. There may be text content after
  the attribute list or name. If the element is
  a leaf element, the text is added as direct text content of the element.
  Otherwise, a Mallard <code>p</code> element is implicitly created.</p>

  <p>If the line after an informational element is indented beyond the outer
  indent of that element, that line's indentation becomes the inner indent
  of the element. Subsequent non-blank lines continue to be child
  content as long as they are indented to at least this level.
  Further indentation may create child elements of child elements.</p>

  <p>If a line in the info segment does not start with the <code>@</code>
  character, it is text content. If the current element is not a leaf
  element, an external element, or a tree item without child items, then
  a Mallard <code>p</code> element is implicitly created with
  the outer and inner indent set to the indentation level of the line.
  If the line is the first line after an info line and a <code>p</code>
  element was already implicitly created due to text on the same line
  as the informational element, the outer and inner indent of that
  implicit <code>p</code> element is set to the indentation level of
  the line. If the current element is a leaf element, the line is
  added to the element's text content.</p>

  <p>If a blank line is encountered in an informational leaf element,
  then the blank line closes that element, unless it is a verbatim element with an
  inner indent greater than its outer indent. If the element is an
  indented verbatim element, the blank line is added to the content.</p>

  <p>A leaf informational element may have an inner indent equal to its
  outer indent in which it consumes subsequent text lines (without a
  leading <code>@</code> character) until a blank line or a line with
  a smaller outer indent. A non-leaf informational element cannot have
  any child content without an extra inner indent. Note that this is
  different from the behavior of block elements.</p>
</section>
<!-- END spec -->

</page>

